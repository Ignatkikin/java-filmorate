DROP TABLE IF EXISTS genre_film;
DROP TABLE IF EXISTS likes;
DROP TABLE IF EXISTS films;
DROP TABLE IF EXISTS friends;
DROP TABLE IF EXISTS genre;
DROP TABLE IF EXISTS rating_mpa;
DROP TABLE IF EXISTS users;

CREATE TABLE IF NOT EXISTS users (
    user_id LONG GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR NOT NULL,
    login VARCHAR NOT NULL,
    name VARCHAR,
    birthday DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS friends (
    user_id LONG REFERENCES users(user_id) ON DELETE CASCADE,
    friends_id LONG REFERENCES users(user_id) ON DELETE CASCADE,
    UNIQUE (user_id, friends_id)
);

CREATE TABLE IF NOT EXISTS rating_mpa (
    rating_id LONG GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR
);

CREATE TABLE IF NOT EXISTS films (
    film_id LONG GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR NOT NULL,
    description VARCHAR(200) NOT NULL,
    releaseDate DATE NOT NULL,
    duration INTEGER NOT NULL,
    rating_mpa_id INTEGER REFERENCES rating_mpa(rating_id)
);

CREATE TABLE IF NOT EXISTS genre (
    genre_id LONG GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre_name VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS genre_film (
    film_id LONG REFERENCES films(film_id) ON DELETE CASCADE,
    genre_id LONG REFERENCES genre(genre_id),
    UNIQUE (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS likes (
    film_id LONG REFERENCES films(film_id) ON DELETE CASCADE,
    user_id LONG REFERENCES users(user_id) ON DELETE CASCADE,
    UNIQUE (film_id, user_id)
);